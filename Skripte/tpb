#!/usr/bin/bash
#
# v-k 2013
#
###
            
errorout() { 
  echo "error: $*" >&2; 
  echo
  [[ -e "$tmp_dir" ]] && rm -r "$tmp_dir";
  exit 1;
}

message() { 
  echo "usage: ${0##*/} pattern"; exit 1; 
}

search_pb() {
  local str cntr
  str="$1"
  cntr=$2

  [[ -f "$tmp_dir/tpb.1.test.$cntr" ]] || curl -s "http://thepiratebay.se/search/${str// /%20}/$cntr/7/0" > "$tmp_dir/tpb.1.test.$cntr"
  sed -n '/class="detName"/ {p;n;n;p;n;p;n;n;p;n;p;}' "$tmp_dir/tpb.1.test.$cntr" > "$tmp_dir/tpb.2.test"
  sed -n '/class="detName"/ s/.*>\(.*\)<\/a>/\1/p; n; s/^<a href="\(.*\)" title="Down.*/\1/p; n; s/.*Uploaded \(.*\)\&nbsp\;\(.*\), Size \(.*\)\&nbsp\;\(.*\),.*/\1 \2|\3\4/gp; n; s/[^0-9]//gp; n; s/[^0-9]//gp;' "$tmp_dir/tpb.2.test" > "$tmp_dir/tpb.result"
  sed -i '1,${N;N;N;N;s/\n/|/g}' "$tmp_dir/tpb.result"
}

display_res() {
  width=$(cut -d"|" -f1 "$tmp_dir/tpb.result" | wc -L)
  divider="$(printf "%-$(($width+53))s" " ")"
  i=1
  printf "\n $(tput bold)$(tput setaf 3)%2.2b | %-${width}.${width}s | %11.11b | %9.9b | %8.8b | %6.6b |$(tput sgr0) \n" "# " "NAME (Pg #$((pg_cntr+1)))" "DATE" "SIZE" "SEEDS(!)" "LEECHS"
  echo "${divider// /=}+"
  while read NAME LINK DATE SIZE SEED LEECH; do
    [[ ${#DATE} -ne 11 ]] && DATE="${DATE// /  }"
    printf " %2.2b | %-${width}.${width}s | %11.11b | %9.9b | $(tput setaf 2)%8.8b$(tput sgr0) | $(tput setaf 1)%6.6b$(tput sgr0) | \n" "$i" "$NAME" "$DATE" "$SIZE" "$SEED" "$LEECH"
    ((i++))
  done < "$tmp_dir/tpb.result"
  echo "${divider// /=}+"
}

download() {
  IFS=","
  for i in $sel; do
    link="$(head -n $i "$tmp_dir/tpb.result" | tail -n 1 | cut -d"|" -f2)"
    echo $link >> "$tmp_dir/links"
  done
  IFS="$IFS_BAK"
}

# main starts here
[[ -f /usr/bin/aria2c ]] || errorout "aria2c is needed for getting metadata from magnet links"

[[ $# -eq 1 ]] || message
tmp_dir="$(mktemp -d)"
cmd_arg="$1"
pg_cntr=0

while true; do
  clear

  search_pb "$cmd_arg" $pg_cntr

  IFS_BAK="$IFS"
  IFS="|"
  display_res
  IFS="$IFS_BAK"

  echo
  echo -n "Enter selection: "
  read sel

  [[ -z $sel ]] && errorout "Invalid/Empty choice !! exiting !!!"
  [[ $sel = n ]] && { ((pg_cntr++)); continue; }
  [[ $sel = b ]] && { ((pg_cntr--)); continue; }

  download

  echo 

  aria2c -q --bt-metadata-only --bt-save-metadata -i "$tmp_dir/links" &
  pid=$!

  while kill -0 $pid &> /dev/null; do
    printf "[.   ] Downloading torrents !!\r"
    sleep .4s
    printf "[ .  ] Downloading torrents !!\r"
    sleep .4s
    printf "[  . ] Downloading torrents !!\r"
    sleep .4s
    printf "[   .] Downloading torrents !!\r"
    sleep .4s
    printf "[  . ] Downloading torrents !!\r"
    sleep .4s
    printf "[ .  ] Downloading torrents !!\r"
    sleep .4s
  done

  printf "[DONE] Downloading torrents !!\n\n"
  break
done

rm -r "$tmp_dir"
